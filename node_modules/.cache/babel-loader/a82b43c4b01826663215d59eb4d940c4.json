{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user/Dokumente/React/imdb_project/src/Pages/Collection/Collection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport axios from \"axios\"; // Components\n\nimport { PaginationBar } from \"./components/Pagination\";\nimport { VideoSection } from './components/VideoSection';\nimport { SearchBar } from './components/SearchBar';\nimport { CardList } from \"./components/CardList\";\nconst apiKey = \"api_key\"; //temporary\n\nconst baseUrl = \"https://api.themoviedb.org/3/search/collection\";\nexport const CollectionContext = /*#__PURE__*/createContext();\n\nfunction Collection(props) {\n  _s();\n\n  const [CollectionData, setCollectionData] = useState([]);\n  const [inputData, setInputData] = useState('King');\n  const [countPage, setCountPage] = useState(1);\n  const [page, setPage] = useState(1);\n\n  const handleChange = (state, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    axios.get(baseUrl, {\n      params: {\n        api_key: apiKey,\n        query: inputData,\n        page: page\n      }\n    }).then(res => {\n      var _res$data, _res$data2, _res$data3;\n\n      setCollectionData(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.results);\n\n      if ((res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.total_pages) >= 5) {\n        setCountPage(5);\n      } else setCountPage(res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.total_pages);\n    }).catch().finally();\n  }, [inputData, page]);\n  return /*#__PURE__*/_jsxDEV(CollectionContext.Provider, {\n    value: {\n      setInputData,\n      setPage,\n      CollectionData,\n      countPage,\n      page,\n      handleChange\n    },\n    children: [/*#__PURE__*/_jsxDEV(VideoSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Collection, \"PMwBoQCRRWkflxhrL3xgAQnnVWc=\");\n\n_c = Collection;\nexport default Collection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collection\");","map":{"version":3,"sources":["/Users/user/Dokumente/React/imdb_project/src/Pages/Collection/Collection.js"],"names":["React","useState","useEffect","createContext","axios","PaginationBar","VideoSection","SearchBar","CardList","apiKey","baseUrl","CollectionContext","Collection","props","CollectionData","setCollectionData","inputData","setInputData","countPage","setCountPage","page","setPage","handleChange","state","value","get","params","api_key","query","then","res","data","results","total_pages","catch","finally"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AAGA,MAAMC,MAAM,GAAG,SAAf,C,CAA0B;;AAC1B,MAAMC,OAAO,GAAG,gDAAhB;AAEA,OAAO,MAAMC,iBAAiB,gBAAIR,aAAa,EAAxC;;AAEP,SAASS,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,MAAD,CAA1C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,CAAD,CAAhC;;AAGA,QAAMqB,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrCH,IAAAA,OAAO,CAACG,KAAD,CAAP;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACqB,GAAN,CACIf,OADJ,EACa;AAACgB,MAAAA,MAAM,EAAE;AAClBC,QAAAA,OAAO,EAAElB,MADS;AAElBmB,QAAAA,KAAK,EAAEZ,SAFW;AAGlBI,QAAAA,IAAI,EAAEA;AAHY;AAAT,KADb,EAOGS,IAPH,CAOSC,GAAD,IAAU;AAAA;;AACdf,MAAAA,iBAAiB,CAACe,GAAD,aAACA,GAAD,oCAACA,GAAG,CAAEC,IAAN,8CAAC,UAAWC,OAAZ,CAAjB;;AACA,UAAI,CAAAF,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEC,IAAL,0DAAWE,WAAX,KAAwB,CAA5B,EAA+B;AAC7Bd,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACD,OAFD,MAGAA,YAAY,CAACW,GAAD,aAACA,GAAD,qCAACA,GAAG,CAAEC,IAAN,+CAAC,WAAWE,WAAZ,CAAZ;AACD,KAbH,EAcGC,KAdH,GAeGC,OAfH;AAgBD,GAjBQ,EAiBN,CAACnB,SAAD,EAAYI,IAAZ,CAjBM,CAAT;AAmBA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACH,MAAAA,YAAD;AAAeI,MAAAA,OAAf;AAAwBP,MAAAA,cAAxB;AAAwCI,MAAAA,SAAxC;AAAmDE,MAAAA,IAAnD;AAAyDE,MAAAA;AAAzD,KAAnC;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtCQV,U;;KAAAA,U;AAuCT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport axios from \"axios\";\n\n\n// Components\nimport { PaginationBar } from \"./components/Pagination\";\nimport { VideoSection } from './components/VideoSection';\nimport { SearchBar } from './components/SearchBar';\nimport {CardList} from \"./components/CardList\";\n\n\nconst apiKey = \"api_key\"; //temporary\nconst baseUrl = \"https://api.themoviedb.org/3/search/collection\";\n\nexport const CollectionContext  = createContext();\n\nfunction Collection(props) {\n  const [CollectionData, setCollectionData] = useState([]);\n  const [inputData, setInputData] = useState('King')\n  const [countPage, setCountPage] = useState(1)\n  const [page, setPage] = useState(1);\n\n\n  const handleChange = (state, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    axios.get(\n        baseUrl, {params: {\n        api_key: apiKey,\n        query: inputData,\n        page: page,\n      }\n    })\n      .then((res) =>  {\n        setCollectionData(res?.data?.results);\n        if (res?.data?.total_pages>=5) {\n          setCountPage(5);\n        } else \n        setCountPage(res?.data?.total_pages);\n      })\n      .catch()\n      .finally()\n  }, [inputData, page])\n\n  return (\n    <CollectionContext.Provider value={{setInputData, setPage, CollectionData, countPage, page, handleChange}}>\n      <VideoSection />\n      <SearchBar />\n      <PaginationBar/>\n      <CardList/>\n    </CollectionContext.Provider>\n  );\n}\nexport default Collection;"]},"metadata":{},"sourceType":"module"}