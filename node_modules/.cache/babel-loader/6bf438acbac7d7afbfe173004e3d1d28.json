{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user/Dokumente/React/imdb_project/src/Pages/Movie/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport axios from \"axios\"; // Components\n\nimport { PaginationBar } from \"./components/Pagination\";\nimport { VideoSection } from './components/VideoSection';\nimport { SearchBar } from './components/SearchBar';\nimport { CardList } from \"./components/CardList\";\nimport Navbar from \"./Pages/Movie/components/Navbar\";\nconst apiKey = \"d161df73b66b9d1b527d3526c891aeca\"; //temporary\n\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\"; // We are changing now to Context Consept\n\nexport const MovieContext = /*#__PURE__*/createContext();\n\nfunction Movie(props) {\n  _s();\n\n  const [movieData, setMovieData] = useState([]);\n  const [inputData, setInputData] = useState('Live');\n  const [countPage, setCountPage] = useState(1);\n  const [page, setPage] = useState(1);\n\n  const handleChange = (state, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    axios.get(baseUrl, {\n      params: {\n        api_key: apiKey,\n        query: inputData,\n        page: page\n      }\n    }).then(res => {\n      var _res$data, _res$data2, _res$data3;\n\n      setMovieData(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.results);\n\n      if ((res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.total_pages) >= 5) {\n        setCountPage(5);\n      } else setCountPage(res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.total_pages);\n    }).catch().finally();\n  }, [inputData, page]);\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      setInputData,\n      setPage,\n      movieData,\n      countPage,\n      page,\n      handleChange\n    },\n    children: [/*#__PURE__*/_jsxDEV(VideoSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movie, \"tJmPG1zD/7FPKiZWCUnp8XPt34E=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/user/Dokumente/React/imdb_project/src/Pages/Movie/Movie.js"],"names":["React","useState","useEffect","createContext","axios","PaginationBar","VideoSection","SearchBar","CardList","Navbar","apiKey","baseUrl","MovieContext","Movie","props","movieData","setMovieData","inputData","setInputData","countPage","setCountPage","page","setPage","handleChange","state","value","get","params","api_key","query","then","res","data","results","total_pages","catch","finally"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AAEA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,MAAMC,MAAM,GAAG,kCAAf,C,CAAmD;;AACnD,MAAMC,OAAO,GAAG,2CAAhB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,gBAAIT,aAAa,EAAnC;;AAEP,SAASU,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,MAAD,CAA1C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,CAAD,CAAhC;;AAGA,QAAMsB,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrCH,IAAAA,OAAO,CAACG,KAAD,CAAP;AACD,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACsB,GAAN,CACIf,OADJ,EACa;AAACgB,MAAAA,MAAM,EAAE;AAClBC,QAAAA,OAAO,EAAElB,MADS;AAElBmB,QAAAA,KAAK,EAAEZ,SAFW;AAGlBI,QAAAA,IAAI,EAAEA;AAHY;AAAT,KADb,EAOGS,IAPH,CAOSC,GAAD,IAAU;AAAA;;AACdf,MAAAA,YAAY,CAACe,GAAD,aAACA,GAAD,oCAACA,GAAG,CAAEC,IAAN,8CAAC,UAAWC,OAAZ,CAAZ;;AACA,UAAI,CAAAF,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEC,IAAL,0DAAWE,WAAX,KAAwB,CAA5B,EAA+B;AAC7Bd,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACD,OAFD,MAGAA,YAAY,CAACW,GAAD,aAACA,GAAD,qCAACA,GAAG,CAAEC,IAAN,+CAAC,WAAWE,WAAZ,CAAZ;AACD,KAbH,EAcGC,KAdH,GAeGC,OAfH;AAgBD,GAjBQ,EAiBN,CAACnB,SAAD,EAAYI,IAAZ,CAjBM,CAAT;AAmBA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACH,MAAAA,YAAD;AAAeI,MAAAA,OAAf;AAAwBP,MAAAA,SAAxB;AAAmCI,MAAAA,SAAnC;AAA8CE,MAAAA,IAA9C;AAAoDE,MAAAA;AAApD,KAA9B;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAtCQV,K;;KAAAA,K;AAuCT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport axios from \"axios\";\n\n\n// Components\nimport { PaginationBar } from \"./components/Pagination\";\nimport { VideoSection } from './components/VideoSection';\nimport { SearchBar } from './components/SearchBar';\nimport {CardList} from \"./components/CardList\";\n\nimport Navbar from \"./Pages/Movie/components/Navbar\"\n\nconst apiKey = \"d161df73b66b9d1b527d3526c891aeca\"; //temporary\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\";\n\n// We are changing now to Context Consept\nexport const MovieContext  = createContext();\n\nfunction Movie(props) {\n  const [movieData, setMovieData] = useState([]);\n  const [inputData, setInputData] = useState('Live')\n  const [countPage, setCountPage] = useState(1)\n  const [page, setPage] = useState(1);\n\n\n  const handleChange = (state, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    axios.get(\n        baseUrl, {params: {\n        api_key: apiKey,\n        query: inputData,\n        page: page,\n      }\n    })\n      .then((res) =>  {\n        setMovieData(res?.data?.results);\n        if (res?.data?.total_pages>=5) {\n          setCountPage(5);\n        } else \n        setCountPage(res?.data?.total_pages);\n      })\n      .catch()\n      .finally()\n  }, [inputData, page])\n\n  return (\n    <MovieContext.Provider value={{setInputData, setPage, movieData, countPage, page, handleChange}}>\n      <VideoSection />\n      <SearchBar />\n      <PaginationBar/>\n      <CardList/>\n    </MovieContext.Provider>\n  );\n}\nexport default Movie;"]},"metadata":{},"sourceType":"module"}