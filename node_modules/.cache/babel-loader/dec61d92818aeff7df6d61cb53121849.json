{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user/Dokumente/React/imdbProject/src/components/CardList/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card\";\nimport axios from \"axios\";\nimport { CardListWrapper } from \"./CardList.style\";\nconst apiKey = \"d161df73b66b9d1b527d3526c891aeca\"; //temporary\n\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\";\nexport const CardList = props => {\n  _s();\n\n  const [movieData, setMovieData] = useState(null);\n  const [inputData, setInputData] = useState('');\n  useEffect(() => {\n    axios.get(baseUrl, {\n      params: {\n        api_key: apiKey,\n        query: 'a' || inputData\n      }\n    }).then(res => setMovieData(res.data.results)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movieData && movieData.map(movie => {\n      return /*#__PURE__*/_jsxDEV(CardListWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: movie.title,\n          release_date: movie.release_date,\n          poster_path: `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(CardList, \"XJkK+A8TE+rFm6EEsCIHTIJeu4k=\");\n\n_c = CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/Users/user/Dokumente/React/imdbProject/src/components/CardList/index.js"],"names":["React","useState","useEffect","Card","axios","CardListWrapper","apiKey","baseUrl","CardList","props","movieData","setMovieData","inputData","setInputData","get","params","api_key","query","then","res","data","results","catch","err","console","log","map","movie","title","release_date","poster_path"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,MAAMC,MAAM,GAAG,kCAAf,C,CAAmD;;AACnD,MAAMC,OAAO,GAAG,2CAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACU,GAAN,CAAUP,OAAV,EAAmB;AACfQ,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAEV,MADL;AAEJW,QAAAA,KAAK,EAAE,OAAOL;AAFV;AADO,KAAnB,EAMKM,IANL,CAMWC,GAAD,IAASR,YAAY,CAACQ,GAAG,CAACC,IAAJ,CAASC,OAAV,CAN/B,EAOKC,KAPL,CAOYC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPpB;AAQH,GATQ,EASN,EATM,CAAT;AAUA,sBACI;AAAA,cACKb,SAAS,IAAIA,SAAS,CAACgB,GAAV,CAAcC,KAAK,IAAI;AACjC,0BAAO,QAAC,eAAD;AAAA,+BACH,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEA,KAAK,CAACC,KAAnB;AAA0B,UAAA,YAAY,EAAED,KAAK,CAACE,YAA9C;AAA4D,UAAA,WAAW,EAAG,kCAAiCF,KAAK,CAACG,WAAY;AAA7H;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KAJa;AADlB,mBADJ;AAWH,CAzBM;;GAAMtB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card\";\nimport axios from \"axios\";\nimport { CardListWrapper } from \"./CardList.style\"\n\nconst apiKey = \"d161df73b66b9d1b527d3526c891aeca\"; //temporary\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\";\n\nexport const CardList = (props) => {\n    const [movieData, setMovieData] = useState(null);\n    const [inputData, setInputData] = useState('')\n\n    useEffect(() => {\n        axios.get(baseUrl, {\n            params: {\n                api_key: apiKey,\n                query: 'a' || inputData\n            }\n        })\n            .then((res) => setMovieData(res.data.results))\n            .catch((err) => console.log(err))\n    }, [])\n    return (\n        <>\n            {movieData && movieData.map(movie => {\n                return <CardListWrapper>\n                    <Card title={movie.title} release_date={movie.release_date} poster_path={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} />\n                </CardListWrapper>\n            })\n\n            }\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}