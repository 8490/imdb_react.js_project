{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user/Dokumente/React/imdb_project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Pagination } from \"@material-ui/lab\"; // Components\n\nimport { Card } from \"./components/Card\";\nimport { VideoSection } from './components/VideoSection';\nimport { SearchBar } from './components/SearchBar'; // Style Component\n\nimport { CardWrapper } from './App.style';\nconst apiKey = \"d161df73b66b9d1b527d3526c891aeca\"; //temporary\n\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\";\n\nfunction App(props) {\n  _s();\n\n  const [movieData, setMovieData] = useState(null);\n  const [inputData, setInputData] = useState('live');\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(1);\n\n  const getRequestParams = (inputData, page, apiKey) => {\n    let params = {};\n\n    if (inputData) {\n      params[\"query\"] = inputData;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (apiKey) {\n      params[\"apiKey\"] = apiKey;\n    }\n\n    return params;\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    ;\n    axios.get(baseUrl, getRequestParams(inputData, page, apiKey)).then(res => {\n      setMovieData(res.data.results);\n      setCount(res.data.results.length);\n    });\n  }, [page]);\n\n  function ChangeSetInputData(e) {\n    setInputData(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(VideoSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onChange: ChangeSetInputData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"my-3\",\n      count: count,\n      page: page,\n      siblingCount: 1,\n      boundaryCount: 1,\n      variant: \"outlined\",\n      shape: \"rounded\",\n      onChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardWrapper, {\n      children: movieData === null || movieData === void 0 ? void 0 : movieData.map((movie, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          title: movie.title,\n          poster_path: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"https://tse2.mm.bing.net/th?id=OIP.ai9mtrwlPjK4Tutfq4m-ugHaL2&pid=Api\",\n          overview: movie.overview,\n          release_date: movie.release_date,\n          vote_average: movie.vote_average\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"mHnU3EtFtKEDhk+ujmaAHYZ28TI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Dokumente/React/imdb_project/src/App.js"],"names":["React","useState","useEffect","axios","Pagination","Card","VideoSection","SearchBar","CardWrapper","apiKey","baseUrl","App","props","movieData","setMovieData","inputData","setInputData","page","setPage","count","setCount","getRequestParams","params","handlePageChange","event","value","get","then","res","data","results","length","ChangeSetInputData","e","target","map","movie","index","title","poster_path","overview","release_date","vote_average"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {Pagination} from \"@material-ui/lab\";\n\n// Components\nimport { Card } from \"./components/Card\";\nimport { VideoSection } from './components/VideoSection';\nimport { SearchBar } from './components/SearchBar';\n\n// Style Component\nimport { CardWrapper } from './App.style'\n\nconst apiKey = \"d161df73b66b9d1b527d3526c891aeca\"; //temporary\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\";\n\nfunction App(props) {\n  const [movieData, setMovieData] = useState(null);\n  const [inputData, setInputData] = useState('live')\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(1);\n\n\n  const getRequestParams = (inputData, page, apiKey) => {\n    let params = {};\n\n    if (inputData) {\n      params[\"query\"] = inputData;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (apiKey) {\n      params[\"apiKey\"] = apiKey;\n    }\n\n    return params;\n  };\n\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n  ;\n  axios.get(baseUrl,getRequestParams(inputData, page, apiKey) )\n      .then((res) => {\n        setMovieData(res.data.results);\n        setCount(res.data.results.length);\n      })\n  }, [page])\n\n  function ChangeSetInputData(e) {\n    setInputData(e.target.value)\n  }\n\n  return (\n    <>\n      <VideoSection />\n      <SearchBar onChange={ChangeSetInputData} />\n      <Pagination\n            className=\"my-3\"\n            count={count}\n            page={page}\n            siblingCount={1}\n            boundaryCount={1}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            onChange={handlePageChange}\n          />\n        <CardWrapper>\n          {movieData?.map(\n            (movie, index) => {\n              return <Card\n                key={index}\n                title={movie.title}\n                poster_path={\n                  movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                    : \"https://tse2.mm.bing.net/th?id=OIP.ai9mtrwlPjK4Tutfq4m-ugHaL2&pid=Api\"}\n                overview={movie.overview}\n                release_date={movie.release_date}\n                vote_average={movie.vote_average} />\n            })\n          }\n        </CardWrapper>\n     \n    </>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}