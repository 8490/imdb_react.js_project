{"ast":null,"code":"import _slicedToArray from\"/Users/user/Dokumente/React/imdb_project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import{Card}from\"../Card\";import axios from\"axios\";import{CardListWrapper}from\"./CardList.style\";import{SearchBar}from'../SearchBar';var apiKey=\"d161df73b66b9d1b527d3526c891aeca\";//temporary\nvar baseUrl=\"https://api.themoviedb.org/3/search/movie\";export var CardList=function CardList(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),movieData=_useState2[0],setMovieData=_useState2[1];var _useState3=useState('live'),_useState4=_slicedToArray(_useState3,2),inputData=_useState4[0],setInputData=_useState4[1];useEffect(function(){axios.get(baseUrl,{params:{api_key:apiKey,query:inputData,page:2}}).then(function(res){return setMovieData(res.data.results);});},[inputData]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SearchBar,{onChange:function onChange(e){return setInputData(e.target.value);}}),/*#__PURE__*/_jsx(CardListWrapper,{children:movieData&&movieData.map(function(movie){return/*#__PURE__*/_jsx(Card,{title:movie.title,poster_path:\"https://image.tmdb.org/t/p/w500\".concat(movie.poster_path),overview:movie.overview,release_date:movie.release_date,vote_average:movie.vote_average});})})]});};","map":{"version":3,"sources":["/Users/user/Dokumente/React/imdb_project/src/components/CardList/index.js"],"names":["React","useState","useEffect","Card","axios","CardListWrapper","SearchBar","apiKey","baseUrl","CardList","props","movieData","setMovieData","inputData","setInputData","get","params","api_key","query","page","then","res","data","results","e","target","value","map","movie","title","poster_path","overview","release_date","vote_average"],"mappings":"wQAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,SAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,KAAgC,kBAAhC,CACA,OAASC,SAAT,KAA0B,cAA1B,CAEA,GAAMC,CAAAA,MAAM,CAAG,kCAAf,CAAmD;AACnD,GAAMC,CAAAA,OAAO,CAAG,2CAAhB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,eACGT,QAAQ,CAAC,IAAD,CADX,wCACxBU,SADwB,eACbC,YADa,8BAEGX,QAAQ,CAAC,MAAD,CAFX,yCAExBY,SAFwB,eAEbC,YAFa,eAI/BZ,SAAS,CAAC,UAAM,CACZE,KAAK,CAACW,GAAN,CAAUP,OAAV,CAAmB,CACfQ,MAAM,CAAE,CACJC,OAAO,CAAEV,MADL,CAEJW,KAAK,CAAEL,SAFH,CAGJM,IAAI,CAAC,CAHD,CADO,CAAnB,EAOKC,IAPL,CAOU,SAACC,GAAD,QAAST,CAAAA,YAAY,CAACS,GAAG,CAACC,IAAJ,CAASC,OAAV,CAArB,EAPV,EAQH,CATQ,CASN,CAACV,SAAD,CATM,CAAT,CAYA,mBACI,wCACI,KAAC,SAAD,EAAW,QAAQ,CAAE,kBAAAW,CAAC,QAAIV,CAAAA,YAAY,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB,EAAtB,EADJ,cAEI,KAAC,eAAD,WACKf,SAAS,EAAIA,SAAS,CAACgB,GAAV,CAAc,SAAAC,KAAK,CAAI,CACjC,mBAAO,KAAC,IAAD,EAAM,KAAK,CAAEA,KAAK,CAACC,KAAnB,CAA0B,WAAW,0CAAoCD,KAAK,CAACE,WAA1C,CAArC,CAA8F,QAAQ,CAAEF,KAAK,CAACG,QAA9G,CAAwH,YAAY,CAAEH,KAAK,CAACI,YAA5I,CAA0J,YAAY,CAAEJ,KAAK,CAACK,YAA9K,EAAP,CAEH,CAHa,CADlB,EAFJ,GADJ,CAaH,CA7BM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Card\";\nimport axios from \"axios\";\nimport { CardListWrapper } from \"./CardList.style\"\nimport { SearchBar } from '../SearchBar';\n\nconst apiKey = \"d161df73b66b9d1b527d3526c891aeca\"; //temporary\nconst baseUrl = \"https://api.themoviedb.org/3/search/movie\";\n\nexport const CardList = (props) => {\n    const [movieData, setMovieData] = useState(null);\n    const [inputData, setInputData] = useState('live')\n\n    useEffect(() => {\n        axios.get(baseUrl, {\n            params: {\n                api_key: apiKey,\n                query: inputData,\n                page:2,\n            }\n        })\n            .then((res) => setMovieData(res.data.results))\n    }, [inputData])\n\n\n    return (\n        <>\n            <SearchBar onChange={e => setInputData(e.target.value)} />\n            <CardListWrapper>\n                {movieData && movieData.map(movie => {\n                    return <Card title={movie.title} poster_path={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} overview={movie.overview} release_date={movie.release_date} vote_average={movie.vote_average}/>\n\n                })\n\n                }\n            </CardListWrapper>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}